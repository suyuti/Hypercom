//=============================================================================
// Company:
//      Hypercom Inc
//
// Product:
//      Hypercom Foundation Classes
//      (c) Copyright 2006
//
// File Name:
//      UIScreenFactory.cpp
//
// File Contents:
//      Implementation of the class UIScreenFactory
//
//=============================================================================
#if defined(__GNUC__)
#pragma implementation
#endif

#include <compiler.h>

#include <HypCGrafixFont.hpp>
#include <HypCGrafixInfoBox.hpp>
#include <HypCGrafixInputBox.hpp>
#include <HypCGrafixList.hpp>
#include <HypCGrafixMenu.hpp>
#include <HypCGrafixListMenu.hpp>
#include <HypCGrafixMsgBox.hpp>
#include <HypCGrafixWindow.hpp>
#include <HypCPINEntryScreen.hpp>
#include <HypCGrafixListBox.hpp> 
// The list of hardcoded fonts in Hyperware.
#include <Internal/GAL/Fonts.hpp>

#include "UIScreenFactory.hpp"
#include "DlgSoruSor.hpp"
//#define USE_LIST_MENU

//! M2 font
#define VT9X13 &VT9X13FR.VT9X13FRH
//! Nucleus font used for receipt printing
struct _VT9X13FR {     /* Font Record Structure */
    fontRcd VT9X13FRH;      /* Font Header */
    char hdrFiller[32]; /* align next section */
    grafMap VT9X13FRG;      /* Font GrafMap */
    char gmapFiller[32];/* align next section */
    long VT9X13FRT[64];     /* Font Row Tables */
    short VT9X13FRL[256];   /* Font Location Tables */
    unsigned char VT9X13FRO[512];/* Font Offset/Width Tables */
    unsigned char VT9X13FRD[3280];/* Font Data */
} VT9X13FR = {         /* Initialize the data */
    /* Header Structure */
        0x22,     /* fontVer */
        0x1,     /* fontRev */
        0x6,     /* fontNameLen */
        0x0,      /* pad */
        0x56,0x54,0x39,0x58,0x31,0x33,0x0,0x0,     /* fontBaseName */
        0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
        0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,     /* fontSuffix1 */
        0x0,      /* padding */
        0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,     /* fontSuffix2 */
        0x0,      /* padding */
        0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,     /* fontSuffix3 */
        0x0,      /* padding */
        0,0,0,    /* padding */
        0,     /* fontFacing */
        0x4e,0x55,0x5f,0x5f,0x46,0x4f,0x4e,0x54,     /* fontSign */
        80,     /* fontWeight */
        0,     /* fontCoding */
        0x0,      /* padding */
        0x1424,     /* fontSize */
        255,     /* fontMax */
        32,     /* fontMin */
        13,     /* fontPtSize */
        0,     /* fontfamily */
        0,     /* fontStyle */
        0,     /* fontFlags */
        -1,     /* fontColor[0] */
        0,     /* fontColor[1] */
        0x20,     /* minChar */
        0xff,     /* maxChar */
        9,     /* chWidth */
        13,     /* chHeight */
        0,     /* chKern */
        11,     /* ascent */
        2,     /* descent */
        13,     /* lnSpacing */
        30,     /* chBad */
        0,0,     /* chCenter */
        0,     /* chAngle */
        1,     /* chUnder */
        1,     /* chScore */
        0,     /* fontRsvd */

        /* Location Table */
        sizeof(fontRcd)+
        sizeof(VT9X13FR.hdrFiller)+
        sizeof(grafMap)+
        sizeof(VT9X13FR.gmapFiller)+
        sizeof(VT9X13FR.VT9X13FRT),

        /* Offset Width Table */
        sizeof(fontRcd)+
        sizeof(VT9X13FR.hdrFiller)+
        sizeof(grafMap)+
        sizeof(VT9X13FR.gmapFiller)+
        sizeof(VT9X13FR.VT9X13FRT)+
        sizeof(VT9X13FR.VT9X13FRL),

        0x0,     /* kernTbl */
        0x0,     /* sizeTbl */

        /* GrafMap Offset */
        sizeof(fontRcd)+
        sizeof(VT9X13FR.hdrFiller),

        /* Row Table Offset */
        sizeof(fontRcd)+
        sizeof(VT9X13FR.hdrFiller)+
        sizeof(grafMap)+
        sizeof(VT9X13FR.gmapFiller),

        /* Font table offset */
        sizeof(fontRcd)+
        sizeof(VT9X13FR.hdrFiller)+
        sizeof(grafMap)+
        sizeof(VT9X13FR.gmapFiller)+
        sizeof(VT9X13FR.VT9X13FRT)+
        sizeof(VT9X13FR.VT9X13FRL)+
        sizeof(VT9X13FR.VT9X13FRO),

        0,     /* fontNotice */
        0,     /* fontSupplier */
        0,     /* fontAuthor */
        0,     /* fontInfo */
        0,     /* fontDate */
        0, 13,     /* fontSpacing */
        0, 6,     /* fontLowHgt */
        0, 11,     /* fontCapHgt */
        0, 11,     /* fontAscent */
        0, 2,     /* fontDescent */
        0, 9,     /* fontMaxWid */
        0, 9,     /* fontAvgWid */
        0, 9,     /* fontEmWid */
#ifdef USE_UNICODE
        0,
        0,
        0x000,
#endif
        0x0,     /* offwidTbl[16] for no UNICODE*/
        0x0,     /* offwidTbl[14] for UNICODE*/
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
#ifndef USE_UNICODE
        0x0,
        0x0,
#endif
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    /* GrafMap Structure */
        0,     /* devClass */
        0,     /* devTech */
        3,     /* devMode */
        0x0,      /* padding */
        252,     /* pixBytes */
        2016,     /* pixWidth */
        13,     /* pixHeight */
        72,     /* pixResX */
        72,     /* pixResY */
        1,     /* pixBits */
        1,     /* pixPlanes */
        0x10,     /* mapFlags */
        0x0,      /* padding */
        0x0,     /* mapTable[32] */
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0x0,
        0,     /* mapLock */
        0,     /* mapNextSel */
        0,     /* mapWinType */
        0,     /* mapWinOffset */
        0,     /* mapWinYmin[0] */
        0,     /* mapWinYmin[1] */
        0,     /* mapWinYmax[0] */
        0,     /* mapWinYmax[1] */
        0,     /* mapWinPlane */
        0,     /* mapWinScans */
        0,     /* mapHandle */
        0x0,     /* mapBankMgr */
        0x0,     /* mapPlaneMgr */
        0x0,     /* mapAltMgr */
        0x0,     /* mapDevMgr */
        0x0,     /* prFill */
        0x0,     /* prBlitSS */
        0x0,     /* prBlit1S */
        0x0,     /* prBlitMS */
        0x0,     /* prBlitSM */
        0x0,     /* prRdImg */
        0x0,     /* prWrImg */
        0x0,     /* prLine */
        0x0,     /* prSetPx */
        0x0,     /* prGetPx */
        0x0,     /* cbSyncFunc */
        0x0,     /* cbPostErr */
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
    /* Row Table */
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0,
    /* Location Table */
        0x0, 0x9, 0x12, 0x1b, 0x24, 0x2d, 0x36, 0x3f,
        0x48, 0x51, 0x5a, 0x63, 0x6c, 0x75, 0x7e, 0x87,
        0x90, 0x99, 0xa2, 0xab, 0xb4, 0xbd, 0xc6, 0xcf,
        0xd8, 0xe1, 0xea, 0xf3, 0xfc, 0x105, 0x10e, 0x117,
        0x120, 0x129, 0x132, 0x13b, 0x144, 0x14d, 0x156, 0x15f,
        0x168, 0x171, 0x17a, 0x183, 0x18c, 0x195, 0x19e, 0x1a7,
        0x1b0, 0x1b9, 0x1c2, 0x1cb, 0x1d4, 0x1dd, 0x1e6, 0x1ef,
        0x1f8, 0x201, 0x20a, 0x213, 0x21c, 0x225, 0x22e, 0x237,
        0x240, 0x249, 0x252, 0x25b, 0x264, 0x26d, 0x276, 0x27f,
        0x288, 0x291, 0x29a, 0x2a3, 0x2ac, 0x2b5, 0x2be, 0x2c7,
        0x2d0, 0x2d9, 0x2e2, 0x2eb, 0x2f4, 0x2fd, 0x306, 0x30f,
        0x318, 0x321, 0x32a, 0x333, 0x33c, 0x345, 0x34e, 0x357,
        0x360, 0x369, 0x372, 0x37b, 0x384, 0x38d, 0x396, 0x39f,
        0x3a8, 0x3b1, 0x3ba, 0x3c3, 0x3cc, 0x3d5, 0x3de, 0x3e7,
        0x3f0, 0x3f9, 0x402, 0x40b, 0x414, 0x41d, 0x426, 0x42f,
        0x438, 0x441, 0x44a, 0x453, 0x45c, 0x465, 0x46e, 0x477,
        0x480, 0x489, 0x492, 0x49b, 0x4a4, 0x4ad, 0x4b6, 0x4bf,
        0x4c8, 0x4d1, 0x4da, 0x4e3, 0x4ec, 0x4f5, 0x4fe, 0x507,
        0x510, 0x519, 0x522, 0x52b, 0x534, 0x53d, 0x546, 0x54f,
        0x558, 0x561, 0x56a, 0x573, 0x57c, 0x585, 0x58e, 0x597,
        0x5a0, 0x5a9, 0x5b2, 0x5bb, 0x5c4, 0x5cd, 0x5d6, 0x5df,
        0x5e8, 0x5f1, 0x5fa, 0x603, 0x60c, 0x615, 0x61e, 0x627,
        0x630, 0x639, 0x642, 0x64b, 0x654, 0x65d, 0x666, 0x66f,
        0x678, 0x681, 0x68a, 0x693, 0x69c, 0x6a5, 0x6ae, 0x6b7,
        0x6c0, 0x6c9, 0x6d2, 0x6db, 0x6e4, 0x6ed, 0x6f6, 0x6ff,
        0x708, 0x711, 0x71a, 0x723, 0x72c, 0x735, 0x73e, 0x747,
        0x750, 0x759, 0x762, 0x76b, 0x774, 0x77d, 0x786, 0x78f,
        0x798, 0x7a1, 0x7aa, 0x7b3, 0x7bc, 0x7c5, 0x7ce, 0x7d7,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
    /* Offset/Width Table */
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        9, 0, 9, 0, 9, 0, 9, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0,
    /* Font Data */
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x1, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x18, 0x0, 0x0, 0x0, 0x1, 0x80, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0,
        0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0,
        0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x1b, 0x3, 0x0, 0x3, 0x60, 0xc0, 0x70,
        0x0, 0x1c, 0x1b, 0x6, 0xd, 0x83, 0x81, 0x80,
        0xd8, 0x38, 0x18, 0x0, 0x0, 0x3, 0x83, 0x60,
        0xc0, 0x70, 0x30, 0x36, 0x33, 0xd, 0x80, 0x0,
        0x0, 0x0, 0x0, 0x0, 0xc, 0xc, 0x3, 0x1,
        0x81, 0x91, 0x90, 0x0, 0x0, 0x0, 0x1e, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x70, 0x1e, 0x0, 0x0,
        0xe, 0x7, 0x0, 0xc0, 0x0, 0x0, 0x0, 0x0,
        0x18, 0x0, 0x0, 0x6, 0x3, 0x1, 0xc0, 0x0,
        0x18, 0x6, 0x7, 0x3, 0xc1, 0x80, 0x0, 0x0,
        0x0, 0x0, 0x6, 0x7, 0x6, 0xc1, 0x80, 0x60,
        0x70, 0x78, 0x0, 0x0, 0x6, 0x1, 0x81, 0xc0,
        0xf0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x3, 0x8f,
        0xf3, 0x30, 0x0, 0x0, 0x0, 0x0, 0x7, 0x3,
        0xc0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0,
        0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x1c, 0x0,
        0x6, 0x0, 0x0, 0x0, 0xf0, 0x60, 0x0, 0x0,
        0xc, 0x0, 0x3, 0x0, 0x0, 0xc0, 0x0, 0x0,
        0x0, 0xc, 0xd, 0x80, 0x0, 0x1, 0x98, 0x0,
        0x78, 0x6, 0x18, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x6, 0x1c, 0xc, 0xf, 0x8f, 0xe0, 0x63,
        0xf8, 0x78, 0xfe, 0x3e, 0x1f, 0x0, 0x0, 0x0,
        0x30, 0x1, 0x80, 0x7c, 0x3e, 0xe, 0x3f, 0x87,
        0xcf, 0xe3, 0xf9, 0xfc, 0x7c, 0x63, 0x3f, 0x7,
        0xcc, 0x66, 0x6, 0x19, 0x8c, 0x7c, 0x7e, 0x1f,
        0x1f, 0x87, 0xcf, 0xf3, 0x1b, 0xd, 0x86, 0xc3,
        0x61, 0x9f, 0xc7, 0xcc, 0x3, 0xe0, 0x60, 0x0,
        0x3c, 0x0, 0x18, 0x0, 0x0, 0x30, 0x0, 0x78,
        0x0, 0x60, 0x0, 0x0, 0xc, 0x3, 0x80, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xe1,
        0x83, 0xc0, 0x60, 0x18, 0x3e, 0x1b, 0x6, 0x7,
        0x83, 0x60, 0x60, 0xd8, 0x0, 0x36, 0x1b, 0x3,
        0xd, 0x86, 0xc0, 0xc0, 0xd8, 0x6c, 0xc, 0x0,
        0x1f, 0xc6, 0xc3, 0x60, 0x60, 0xd8, 0x18, 0x36,
        0x33, 0xd, 0x80, 0x1, 0xe0, 0xe0, 0x0, 0x0,
        0x18, 0x18, 0x6, 0x3, 0x2, 0x62, 0x60, 0x0,
        0x0, 0x18, 0x33, 0xf, 0x0, 0x0, 0x0, 0xc0,
        0xd8, 0x3f, 0x1c, 0x0, 0x1b, 0xd, 0x81, 0x80,
        0x0, 0xfc, 0x0, 0x7e, 0x38, 0xe, 0x0, 0xe,
        0x7, 0x3, 0x60, 0x0, 0xc, 0xc, 0xd, 0x87,
        0x81, 0x80, 0x0, 0x0, 0x0, 0x0, 0xc, 0xd,
        0x86, 0xc0, 0xc0, 0xc0, 0xd8, 0x78, 0x0, 0x61,
        0x83, 0x3, 0x3, 0x61, 0xe0, 0x0, 0xfe, 0x3,
        0x0, 0x6, 0x6, 0xc7, 0xfb, 0x30, 0x0, 0x0,
        0x0, 0x0, 0xd, 0x87, 0x80, 0x0, 0x0, 0x0,
        0x0, 0x18, 0x0, 0x0, 0x0, 0x1, 0x80, 0x0,
        0x0, 0x0, 0x36, 0x0, 0x6, 0x3, 0x0, 0x1,
        0xe0, 0x60, 0x0, 0x0, 0x6, 0x7, 0x83, 0x0,
        0x0, 0xc0, 0xd8, 0x0, 0x0, 0xc, 0xd, 0x86,
        0xc1, 0x83, 0xd8, 0x0, 0x70, 0xc, 0xc, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x36, 0x1c,
        0x18, 0xc0, 0x60, 0xe3, 0x0, 0xc0, 0x6, 0x63,
        0x31, 0x80, 0x0, 0x0, 0x60, 0x0, 0xc0, 0xc6,
        0x63, 0x1b, 0x18, 0xcc, 0x66, 0x33, 0x1, 0x80,
        0xc6, 0x63, 0xc, 0x1, 0x8c, 0xc6, 0x6, 0x19,
        0x8c, 0xc6, 0x63, 0x31, 0x98, 0xcc, 0x61, 0x83,
        0x1b, 0xd, 0x86, 0xc3, 0x61, 0x80, 0xc6, 0xc,
        0x0, 0x60, 0xf0, 0x0, 0x1c, 0x0, 0x18, 0x0,
        0x0, 0x30, 0x0, 0xcc, 0x0, 0x60, 0xc, 0x1,
        0x8c, 0x1, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x3, 0x1, 0x80, 0x60, 0x30, 0x30,
        0x63, 0x0, 0x0, 0xc, 0xc0, 0x0, 0x0, 0x70,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x38, 0x0, 0x0, 0x36, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3,
        0x31, 0xb0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6d, 0x81,
        0x83, 0x62, 0x20, 0x0, 0xc0, 0x38, 0x36, 0xc,
        0x3, 0x3, 0x0, 0x0, 0x1, 0xf8, 0x0, 0x0,
        0x18, 0x1b, 0x1b, 0x6, 0x3, 0x0, 0xc0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x1, 0x87, 0xfc, 0x0,
        0x30, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x61, 0x80, 0x0, 0x0, 0x0,
        0x0, 0xd, 0xb0, 0x7e, 0x0, 0x0, 0x0, 0xf,
        0xf0, 0x0, 0x0, 0x7c, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0,
        0x0, 0x1, 0x80, 0x0, 0x0, 0x0, 0x30, 0xd,
        0x86, 0x7, 0x80, 0x0, 0x0, 0x60, 0x0, 0x3,
        0x0, 0xc, 0xc3, 0xc, 0x0, 0xc1, 0xf8, 0x0,
        0x0, 0xc, 0xd, 0x86, 0xc3, 0xe1, 0xb0, 0xe0,
        0xc0, 0xc, 0xc, 0xd, 0x83, 0x0, 0x0, 0x0,
        0x0, 0xc, 0x63, 0x3c, 0x18, 0xc0, 0xc1, 0xe3,
        0x1, 0x80, 0xc, 0x63, 0x31, 0x86, 0x3, 0x0,
        0xc0, 0x0, 0x60, 0xc6, 0x63, 0x31, 0x98, 0xcc,
        0x6, 0x33, 0x1, 0x80, 0xc0, 0x63, 0xc, 0x1,
        0x8d, 0x86, 0x7, 0x39, 0xcc, 0xc6, 0x63, 0x31,
        0x98, 0xcc, 0x1, 0x83, 0x19, 0x99, 0x86, 0x66,
        0x33, 0x1, 0x86, 0x6, 0x0, 0x61, 0x98, 0x0,
        0x6, 0x0, 0x18, 0x0, 0x0, 0x30, 0x0, 0xc0,
        0x0, 0x60, 0x0, 0x0, 0xc, 0x1, 0x80, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3, 0x1,
        0x80, 0x60, 0x18, 0x60, 0x60, 0x31, 0x80, 0xc,
        0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x70, 0x38, 0x7f, 0x0,
        0x36, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x3f, 0x0, 0x0, 0x3, 0x3, 0x38, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x6, 0x18, 0x0,
        0x0, 0x18, 0x7f, 0x8f, 0x86, 0xc1, 0xc0, 0xc1,
        0xf0, 0x38, 0x36, 0xc, 0xe, 0x1, 0x80, 0x0,
        0x1, 0xf8, 0x0, 0x0, 0x18, 0x1b, 0xd, 0x86,
        0x3, 0x0, 0x60, 0xc6, 0x1c, 0xe, 0x7, 0x3,
        0x81, 0x80, 0x0, 0x0, 0x78, 0x0, 0x3f, 0x9f,
        0xcf, 0xe7, 0xe3, 0xf1, 0xf8, 0xfc, 0x0, 0x33,
        0x1f, 0x8f, 0xc7, 0xe3, 0xf0, 0x31, 0xb0, 0xcf,
        0x0, 0x18, 0xcc, 0x67, 0xfb, 0x30, 0x0, 0xc6,
        0xc0, 0x0, 0x0, 0x0, 0x7, 0xc7, 0xc0, 0x0,
        0x0, 0x18, 0x66, 0x33, 0x19, 0x81, 0x80, 0x0,
        0x0, 0x0, 0x1c, 0x0, 0x6, 0xf, 0xc0, 0x0,
        0x0, 0x60, 0x0, 0x3e, 0x31, 0x8c, 0x3, 0x3,
        0x0, 0xc1, 0xb0, 0x0, 0x0, 0xc, 0x0, 0xf,
        0xe5, 0x80, 0x61, 0xb0, 0x0, 0x18, 0x6, 0x7,
        0x3, 0x0, 0x0, 0x0, 0x0, 0x18, 0x63, 0xc,
        0x0, 0xc1, 0x83, 0x63, 0xf1, 0x80, 0x18, 0x63,
        0x33, 0x8f, 0x7, 0x81, 0x83, 0xf8, 0x30, 0x6,
        0x6f, 0x31, 0x98, 0xcc, 0x6, 0x33, 0x1, 0x80,
        0xc0, 0x63, 0xc, 0x1, 0x8f, 0x6, 0x7, 0xf9,
        0xec, 0xc6, 0x63, 0x31, 0x98, 0xcc, 0x1, 0x83,
        0x19, 0x99, 0x86, 0x3c, 0x1e, 0x3, 0x6, 0x3,
        0x0, 0x60, 0x0, 0x0, 0x0, 0x1f, 0x1f, 0x87,
        0xc3, 0xf1, 0xf0, 0xc0, 0x7e, 0x7e, 0x1c, 0x3,
        0x8c, 0xc1, 0x87, 0xf1, 0xf8, 0x7c, 0x7e, 0x1f,
        0x9f, 0x87, 0xc7, 0xe3, 0x31, 0x99, 0x86, 0x63,
        0x31, 0x9f, 0xc1, 0x81, 0x80, 0xc0, 0xc, 0xc0,
        0x60, 0x31, 0x8f, 0x87, 0x83, 0xe1, 0xf0, 0xf8,
        0x7c, 0x3e, 0x1f, 0xf, 0x87, 0x3, 0x81, 0xc0,
        0xd8, 0x6c, 0x60, 0x3f, 0x36, 0x7, 0xc3, 0xe1,
        0xf1, 0x98, 0xcc, 0x63, 0x61, 0x99, 0x8f, 0xe7,
        0x83, 0x58, 0x0, 0x0, 0x3e, 0x1c, 0xf, 0x8c,
        0xc7, 0xe7, 0x18, 0x0, 0x0, 0x18, 0x79, 0x99,
        0x8d, 0x83, 0xe0, 0xc0, 0xc0, 0x38, 0x1c, 0x3f,
        0x18, 0xd, 0x80, 0x3, 0x19, 0xf8, 0x0, 0x0,
        0x18, 0xe, 0x6, 0xc6, 0x33, 0x73, 0x6c, 0x7c,
        0x36, 0x1b, 0xd, 0x86, 0xc1, 0x80, 0x0, 0x0,
        0xfc, 0xff, 0xb0, 0x18, 0xc, 0x1, 0x80, 0xc0,
        0x60, 0x30, 0x0, 0x1e, 0x30, 0xd8, 0x6c, 0x36,
        0x18, 0xc1, 0xb0, 0xdb, 0x0, 0x18, 0xcc, 0x6f,
        0xf3, 0x30, 0x0, 0xc6, 0xc0, 0x0, 0xf, 0x87,
        0xcc, 0x6, 0x1, 0xf8, 0x30, 0x18, 0x66, 0x3b,
        0x19, 0x81, 0x80, 0x0, 0x0, 0x0, 0x36, 0x1f,
        0x86, 0xf, 0x0, 0x1, 0xf0, 0x60, 0x0, 0x67,
        0x31, 0x9e, 0x3, 0x0, 0xc0, 0xc0, 0x0, 0x0,
        0x0, 0xc, 0x0, 0x6, 0xc3, 0xc0, 0x61, 0xb0,
        0x0, 0x18, 0x6, 0x1f, 0xcf, 0xc0, 0x3, 0xf8,
        0x0, 0x30, 0x63, 0xc, 0x1, 0x83, 0xc6, 0x63,
        0x99, 0xf8, 0x18, 0x3e, 0x1f, 0x86, 0x3, 0x3,
        0x0, 0x0, 0x18, 0xc, 0x7b, 0x31, 0x9f, 0x8c,
        0x6, 0x33, 0xe1, 0xf0, 0xc0, 0x7f, 0xc, 0x1,
        0x8e, 0x6, 0x6, 0xd9, 0xbc, 0xc6, 0x7e, 0x31,
        0x9f, 0x87, 0xc1, 0x83, 0x19, 0x99, 0xb6, 0x18,
        0xc, 0x6, 0x6, 0x1, 0x80, 0x60, 0x0, 0x0,
        0x0, 0x1, 0x9c, 0xcc, 0x66, 0x73, 0x19, 0xf8,
        0xcc, 0x73, 0xc, 0x1, 0x8d, 0x81, 0x86, 0xd9,
        0xcc, 0xc6, 0x73, 0x33, 0x8c, 0xcc, 0x63, 0x3,
        0x31, 0x99, 0x86, 0x36, 0x31, 0x81, 0x87, 0x1,
        0x80, 0x71, 0xfc, 0xfe, 0x60, 0x31, 0x98, 0xc0,
        0x0, 0x30, 0x18, 0xc, 0xc6, 0x63, 0x31, 0x98,
        0xc3, 0x1, 0x80, 0xc1, 0x8c, 0xc6, 0x60, 0x6d,
        0xb7, 0x8c, 0x66, 0x33, 0x19, 0x98, 0xcc, 0x63,
        0x61, 0x99, 0x86, 0xc3, 0x3, 0x58, 0x0, 0x0,
        0x3, 0xc, 0x18, 0xcc, 0xc7, 0x37, 0x98, 0x0,
        0x0, 0x30, 0x7f, 0x8f, 0x9b, 0x6, 0x30, 0xc0,
        0xc0, 0xfe, 0x0, 0xc, 0x1f, 0x7, 0x0, 0x3,
        0x18, 0xf8, 0x38, 0x0, 0x3c, 0x0, 0x3, 0x6f,
        0x77, 0xd9, 0xdc, 0x6c, 0x63, 0x31, 0x98, 0xcc,
        0x61, 0x80, 0x0, 0x1, 0xfe, 0x0, 0x30, 0x18,
        0xc, 0x1, 0x80, 0xc0, 0x60, 0x30, 0x0, 0x3f,
        0x30, 0xd8, 0x6c, 0x36, 0x1b, 0x1, 0xbc, 0xdb,
        0x0, 0x18, 0xcc, 0x67, 0xf9, 0xe0, 0x0, 0xfc,
        0xc0, 0x0, 0x0, 0xc0, 0x6c, 0x7, 0x80, 0x6c,
        0x30, 0x18, 0x7e, 0x3f, 0xf, 0x1, 0x80, 0x0,
        0x0, 0x0, 0x36, 0xd, 0x86, 0xf, 0x0, 0x3,
        0x18, 0x60, 0x0, 0x6f, 0x31, 0x8c, 0x3, 0x0,
        0x30, 0xc0, 0x0, 0x0, 0x0, 0xc, 0x0, 0xf,
        0xe1, 0xa0, 0xc0, 0xe0, 0x0, 0x18, 0x6, 0x7,
        0x3, 0x0, 0x0, 0x0, 0x0, 0x60, 0x63, 0xc,
        0x7, 0x0, 0x66, 0x60, 0x19, 0xcc, 0x30, 0x63,
        0x1, 0x80, 0x0, 0x1, 0x80, 0x0, 0x30, 0x18,
        0x7f, 0x3f, 0x98, 0xcc, 0x6, 0x33, 0x1, 0x80,
        0xde, 0x63, 0xc, 0x1, 0x8f, 0x6, 0x6, 0xd9,
        0x9c, 0xc6, 0x60, 0x31, 0x9e, 0x0, 0x61, 0x83,
        0x18, 0xf1, 0xb6, 0x3c, 0xc, 0xc, 0x6, 0x0,
        0xc0, 0x60, 0x0, 0x0, 0x0, 0x1f, 0x98, 0xcc,
        0x6, 0x33, 0xf8, 0xc0, 0xcc, 0x63, 0xc, 0x1,
        0x8f, 0x1, 0x86, 0xd9, 0x8c, 0xc6, 0x63, 0x31,
        0x8c, 0x7, 0x3, 0x3, 0x31, 0x99, 0xb6, 0x1c,
        0x31, 0x83, 0x1, 0x81, 0x80, 0xc0, 0xc, 0xc0,
        0x60, 0x31, 0x9f, 0xc0, 0x3, 0xf1, 0xf8, 0xfc,
        0xc0, 0x7f, 0x3f, 0x9f, 0xc3, 0x1, 0x80, 0xc1,
        0x8c, 0xc6, 0x7c, 0x6f, 0x3e, 0xc, 0x66, 0x33,
        0x19, 0x98, 0xcc, 0x63, 0x61, 0x99, 0x86, 0xc3,
        0x3, 0x58, 0x60, 0x0, 0x3f, 0xc, 0x18, 0xcc,
        0xc6, 0x36, 0xd8, 0x0, 0x0, 0x60, 0x6d, 0x80,
        0xd, 0x86, 0x0, 0xc1, 0xf0, 0x38, 0x0, 0xc,
        0x0, 0x0, 0x0, 0x3, 0x18, 0x78, 0x0, 0x0,
        0x0, 0x1f, 0x6, 0xc0, 0xf0, 0x18, 0x3c, 0x6c,
        0x63, 0x31, 0x98, 0xcc, 0x6f, 0xf8, 0x0, 0x0,
        0xfc, 0x0, 0x3e, 0x1f, 0xf, 0x81, 0x80, 0xc0,
        0x60, 0x30, 0x0, 0xc, 0x30, 0xd8, 0x6c, 0x36,
        0x18, 0xc1, 0xb0, 0xdb, 0x7f, 0xd8, 0xcc, 0x6f,
        0xf0, 0xc0, 0x0, 0xc6, 0xfc, 0x0, 0xf, 0xc7,
        0xe7, 0xc6, 0x1, 0xf9, 0xfe, 0xf8, 0x66, 0x37,
        0x6, 0x1, 0xf8, 0x0, 0x7f, 0xf0, 0x1c, 0xd,
        0xbe, 0xf, 0xc0, 0x3, 0x18, 0x7f, 0xff, 0x63,
        0x31, 0x8c, 0x1f, 0xf0, 0xc0, 0xc0, 0x0, 0x0,
        0x0, 0xc, 0x0, 0x6, 0xc7, 0xc1, 0xb1, 0xbc,
        0x0, 0xc, 0xc, 0xd, 0x83, 0x0, 0x0, 0x0,
        0x0, 0xc0, 0x63, 0xc, 0xc, 0x0, 0x67, 0xf0,
        0x19, 0x8c, 0x30, 0x63, 0x1, 0x80, 0x0, 0x0,
        0xc3, 0xf8, 0x60, 0x18, 0x6f, 0x31, 0x98, 0xcc,
        0x6, 0x33, 0x1, 0x80, 0xc6, 0x63, 0xc, 0x1,
        0x8d, 0x86, 0x6, 0x19, 0x8c, 0xc6, 0x60, 0x3d,
        0x9b, 0x0, 0x61, 0x83, 0x18, 0xf1, 0xb6, 0x66,
        0xc, 0x18, 0x6, 0x0, 0x60, 0x60, 0x0, 0x0,
        0x0, 0x31, 0x98, 0xcc, 0x6, 0x33, 0x0, 0xc0,
        0x78, 0x63, 0xc, 0x1, 0x8d, 0x81, 0x86, 0xd9,
        0x8c, 0xc6, 0x73, 0x33, 0x8c, 0x1, 0xc3, 0x3,
        0x30, 0xf1, 0xb6, 0x1c, 0x33, 0x86, 0x3, 0x1,
        0x80, 0x60, 0x18, 0x60, 0x60, 0x31, 0x98, 0x0,
        0x6, 0x33, 0x19, 0x8c, 0xc0, 0x60, 0x30, 0x18,
        0x3, 0x1, 0x80, 0xc1, 0xfc, 0xfe, 0x60, 0x6c,
        0x36, 0xc, 0x66, 0x33, 0x19, 0x98, 0xcc, 0x67,
        0x61, 0x99, 0x86, 0xc3, 0x3, 0x98, 0x0, 0x0,
        0x63, 0xc, 0x18, 0xcc, 0xc6, 0x36, 0x78, 0x0,
        0x0, 0x63, 0x33, 0x1f, 0x86, 0xc6, 0x0, 0xc0,
        0xc0, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3,
        0x18, 0x78, 0x0, 0x0, 0x0, 0x0, 0xd, 0x81,
        0xb0, 0x70, 0x6c, 0x7c, 0x7f, 0x3f, 0x9f, 0xcf,
        0xe1, 0x80, 0x0, 0x0, 0x78, 0x0, 0x30, 0x18,
        0xc, 0x1, 0x80, 0xc0, 0x60, 0x30, 0x0, 0x3f,
        0x30, 0xd8, 0x6c, 0x36, 0x18, 0x31, 0xb0, 0xdb,
        0xc, 0x18, 0xcc, 0x67, 0xf8, 0xc0, 0x0, 0xc6,
        0x3f, 0x0, 0x18, 0xcc, 0x63, 0xe6, 0xfb, 0x60,
        0x30, 0x0, 0x66, 0x33, 0x7, 0xe0, 0x0, 0x0,
        0x60, 0x30, 0x6, 0xd, 0x86, 0x7, 0x80, 0x3,
        0x18, 0x60, 0x0, 0x7b, 0x31, 0x8c, 0x0, 0x3,
        0x0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x6,
        0xc1, 0x81, 0xf9, 0x98, 0x0, 0xc, 0xc, 0x0,
        0x0, 0x3, 0xc0, 0x0, 0x61, 0x80, 0x36, 0xc,
        0x18, 0xc, 0x60, 0x63, 0x19, 0x8c, 0x60, 0x63,
        0x3, 0x6, 0x7, 0x80, 0x60, 0x0, 0xc0, 0x0,
        0x60, 0x31, 0x98, 0xcc, 0x66, 0x33, 0x1, 0x80,
        0xce, 0x63, 0xc, 0x19, 0x8c, 0xc6, 0x6, 0x19,
        0x8c, 0xc6, 0x60, 0x37, 0x99, 0x8c, 0x61, 0x83,
        0x18, 0xf1, 0xfe, 0xc3, 0xc, 0x18, 0x6, 0x0,
        0x30, 0x60, 0x0, 0x0, 0x0, 0x33, 0x9c, 0xcc,
        0x66, 0x73, 0x18, 0xc0, 0xc0, 0x63, 0xc, 0x1,
        0x8c, 0xc1, 0x86, 0xd9, 0x8c, 0xc6, 0x7e, 0x1f,
        0x8c, 0xc, 0x63, 0x33, 0x30, 0xf1, 0xfe, 0x36,
        0x1f, 0x8c, 0x3, 0x1, 0x80, 0x60, 0x30, 0x30,
        0x63, 0x31, 0x98, 0xc0, 0x6, 0x73, 0x39, 0x9c,
        0xc6, 0x63, 0x31, 0x98, 0xc3, 0x1, 0x80, 0xc1,
        0x8c, 0xc6, 0x60, 0x6d, 0xb6, 0xc, 0x66, 0x33,
        0x19, 0x98, 0xcc, 0x3f, 0x61, 0x99, 0x86, 0xc7,
        0x31, 0xb0, 0x0, 0x0, 0x67, 0xc, 0x18, 0xcc,
        0xc6, 0x36, 0x38, 0x0, 0x0, 0x63, 0x1e, 0x0,
        0x3, 0x66, 0x30, 0xc0, 0xd8, 0x38, 0x0, 0x3f,
        0x0, 0x0, 0x0, 0x3, 0xb8, 0x78, 0x0, 0x0,
        0x0, 0x0, 0x1b, 0x1, 0xf0, 0xc0, 0x7c, 0xc6,
        0x63, 0x31, 0x98, 0xcc, 0x61, 0x80, 0x3, 0xfe,
        0x30, 0x0, 0x30, 0x18, 0xc, 0x1, 0x80, 0xc0,
        0x60, 0x30, 0x0, 0xc, 0x30, 0xd8, 0x6c, 0x36,
        0x18, 0xd, 0xb0, 0xf3, 0xc, 0x18, 0xcc, 0x6f,
        0xf0, 0xc0, 0x0, 0xe6, 0x30, 0x0, 0x19, 0xcc,
        0xe3, 0x30, 0xc3, 0x6c, 0x30, 0x0, 0x1f, 0x8c,
        0x1, 0x80, 0x0, 0x0, 0x60, 0x30, 0x36, 0xd,
        0x86, 0x3, 0x0, 0x3, 0x18, 0x60, 0x0, 0x73,
        0x31, 0x9c, 0xc0, 0xc, 0x0, 0xc0, 0x0, 0x0,
        0x0, 0xc, 0x0, 0x0, 0x0, 0x3, 0x30, 0xfc,
        0x0, 0x6, 0x18, 0x0, 0x0, 0x3, 0x80, 0x0,
        0xf1, 0x80, 0x1c, 0x3f, 0x1f, 0xc7, 0xc0, 0x61,
        0xf0, 0xf8, 0x60, 0x3e, 0x1e, 0xf, 0x7, 0x0,
        0x30, 0x1, 0x80, 0x18, 0x3e, 0x31, 0xbf, 0x87,
        0xcf, 0xe3, 0xf9, 0x80, 0x7e, 0x63, 0x3f, 0xf,
        0xc, 0x67, 0xf6, 0x19, 0x8c, 0x7c, 0x60, 0x1f,
        0x18, 0xc7, 0xc1, 0x81, 0xf0, 0x60, 0xcc, 0xc3,
        0xc, 0x1f, 0xc7, 0xc0, 0x33, 0xe0, 0x0, 0x0,
        0x0, 0x1f, 0x9f, 0x87, 0xc3, 0xf1, 0xf0, 0xc0,
        0x7c, 0x63, 0x3f, 0x19, 0x8c, 0x67, 0xe6, 0x19,
        0x8c, 0x7c, 0x60, 0x1, 0x8c, 0x7, 0xc1, 0xe1,
        0xf8, 0x60, 0xcc, 0x63, 0x1, 0x9f, 0xc1, 0xe1,
        0x83, 0xc0, 0x60, 0x18, 0x3e, 0x1f, 0xf, 0x80,
        0x3, 0xf1, 0xf8, 0xfc, 0x7c, 0x3e, 0x1f, 0xf,
        0x8f, 0xc7, 0xe3, 0xf1, 0x8c, 0xc6, 0x7f, 0x3f,
        0x37, 0xc7, 0xc3, 0xe1, 0xf0, 0xfc, 0x7e, 0x3,
        0x3f, 0xf, 0xcc, 0xcf, 0xe0, 0xe0, 0x0, 0x0,
        0x3f, 0x3f, 0xf, 0x87, 0xe6, 0x36, 0x18, 0x0,
        0x0, 0x3e, 0x0, 0x0, 0x0, 0x3, 0xe0, 0xc0,
        0x70, 0x38, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3,
        0xf8, 0x78, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x70, 0xf8, 0x1c, 0x0, 0x63, 0x31, 0x98, 0xcc,
        0x61, 0x80, 0x0, 0x0, 0x0, 0x0, 0x3f, 0x9f,
        0xcf, 0xe7, 0xe3, 0xf1, 0xf8, 0xfc, 0x0, 0xc,
        0x1f, 0x8f, 0xc7, 0xe3, 0xf3, 0xfc, 0xfe, 0x7e,
        0xc, 0xf, 0x87, 0xc7, 0xf8, 0xc0, 0x0, 0xfc,
        0x3e, 0x0, 0xf, 0xc7, 0xe3, 0xe0, 0xf1, 0xf9,
        0xfe, 0x0, 0x6, 0xc, 0x1, 0x80, 0x0, 0x0,
        0x60, 0x30, 0x1c, 0x1f, 0x86, 0x0, 0x0, 0x1,
        0xf0, 0x60, 0x0, 0x7e, 0x1f, 0x3f, 0x80, 0xf,
        0xf0, 0xc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x6, 0x0, 0x0, 0x60, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x6, 0xc, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x1, 0xfe, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0xc6, 0x0, 0x0, 0x19,
        0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x60, 0x1,
        0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x31, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0xc, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x18, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x63, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x1, 0xf8, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x1, 0x80, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0xc0, 0xc, 0x0, 0x0, 0xf,
        0xf0, 0x0, 0x0, 0xc0, 0x30, 0x0, 0x0, 0x0,
        0x3, 0x30, 0xc0, 0x0, 0x0, 0x0, 0x6, 0xc,
        0x1, 0x80, 0x0, 0x0, 0x60, 0x30, 0x0, 0x1,
        0x86, 0x0, 0xf, 0xf8, 0x0, 0x60, 0x0, 0xc0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0xc0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x7c, 0x0, 0x0, 0xf, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x60, 0x1, 0x80, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x1f, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x18, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x30, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0xf0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x1, 0x80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0xc, 0x0, 0x0, 0x7, 0xf8, 0x0, 0x0, 0x0,
        0x30, 0x0, 0x0, 0x0, 0x3, 0x30, 0xc0, 0x0,
        0x0, 0x0, 0x6, 0xf, 0xc1, 0x80, 0x0, 0x0,
        0x60, 0x30, 0x0, 0xf, 0x6, 0x0, 0x0, 0x0,
        0x0, 0x60, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,
        0x0, 0xc0, 0x0, 0x0, 0xff, 0xff, 0xff, 0xff};     /* VT9X13FR ends */

//-----------------------------------------------------------------------------
//!
//!      Builds the Hyperware screen factory
//!
//! \param
//!      wnd		A non-NULL pointer to the application's main window
//!
//! \return
//!      None
//!
//! \note
//!
UIScreenFactory::UIScreenFactory( HypCGrafixWindow *wnd, const HString& strLocale ) :
	HypCUIScreenFactory(),
	m_Window( wnd )
{
    for ( size_t i = 0; i < HYPERWARE_MAX_FONTS; ++i )
        m_HyperwareFonts[i] = NULL;

	CreateFonts( strLocale );
}

//-----------------------------------------------------------------------------
//!
//!      Destroys the fonts used by the screen factory
//!
//! \return
//!      None
//!
//! \note
//!
UIScreenFactory::~UIScreenFactory()
{
	ResetFonts();
}

//-----------------------------------------------------------------------------
//!
//!      Destroys the fonts used by the screen factory
//!
//! \return
//!      None
//!
//! \note
//!
void UIScreenFactory::ResetFonts()
{
	for ( size_t i = 0; i < HYPERWARE_MAX_FONTS; ++i )
        if ( m_HyperwareFonts[i] )
        {
            delete m_HyperwareFonts[i];
            m_HyperwareFonts[i] = NULL;
        }
}

//-----------------------------------------------------------------------------
//!
//!      This function is called from the constructor to populate the
//! 		array of fonts the application will use.
//!
//! \return
//!      void
//!
//! \note
//!
void UIScreenFactory::CreateFonts( const HString& strLocale )
{
	ResetFonts();

	// Set the fonts acording to the locale id:
	if ( strLocale == "English" )
	{
#ifdef PLATFORM_M4100
		m_HyperwareFonts[PROMPT_TEXT_FONT] = new HypCFont(VT9X13);

		m_HyperwareFonts[TITLEBAR_FONT] = new HypCFont(VT9X13);

		m_HyperwareFonts[LIST_TEXT_FONT] = new HypCFont(VT9X13);

		m_HyperwareFonts[BUTTON_TEXT_FONT] = new HypCFont(VT9X13);
#else
        m_HyperwareFonts[PROMPT_TEXT_FONT] = new HypCFont ( HFC::Internal::GAL::Fonts::Get_M6x13() );

		m_HyperwareFonts[TITLEBAR_FONT] = new HypCFont ( HFC::Internal::GAL::Fonts::Get_M6x13() );

		m_HyperwareFonts[LIST_TEXT_FONT] = new HypCFont( HFC::Internal::GAL::Fonts::Get_M6x10() );

		m_HyperwareFonts[BUTTON_TEXT_FONT] = new HypCFont ( HFC::Internal::GAL::Fonts::Get_ChicaM12() );
#endif
	}
	else if ( strLocale == "Russian" )
	{
		HypCGrafixFont* pCyrillic = new HypCGrafixFont ( "AbSerif.fnt" );

        m_HyperwareFonts[BUTTON_TEXT_FONT] = pCyrillic;
		// For Russian, we use the same font all over the place, but we create only one
		// font image in memory
		m_HyperwareFonts[TITLEBAR_FONT] = new HypCFont( pCyrillic->GetFontPtr() );
		m_HyperwareFonts[LIST_TEXT_FONT] = new HypCFont( pCyrillic->GetFontPtr() );
		m_HyperwareFonts[PROMPT_TEXT_FONT] = new HypCFont( pCyrillic->GetFontPtr() );
	}
	else if ( strLocale == "Baltic" )
	{
#ifdef PLATFORM_M4100
		m_HyperwareFonts[PROMPT_TEXT_FONT] = new HypCFont(VT9X13);

		m_HyperwareFonts[TITLEBAR_FONT] = new HypCFont(VT9X13);

		m_HyperwareFonts[LIST_TEXT_FONT] = new HypCFont(VT9X13);

		m_HyperwareFonts[BUTTON_TEXT_FONT] = new HypCFont(VT9X13);
#else
		HypCGrafixFont* pCyrillic = new HypCGrafixFont ( "baltic.fnt" );
		m_HyperwareFonts[BUTTON_TEXT_FONT] = pCyrillic;

		m_HyperwareFonts[TITLEBAR_FONT] = new HypCFont ( pCyrillic->GetFontPtr() );

		m_HyperwareFonts[LIST_TEXT_FONT] = new HypCFont ( pCyrillic->GetFontPtr() );

		m_HyperwareFonts[PROMPT_TEXT_FONT] = new HypCFont ( pCyrillic->GetFontPtr() );
#endif
	}
}


//-----------------------------------------------------------------------------
//!
//!      Creates the font specified by its font name and assigns it to the
//! 		selected font type.
//!
//! \param
//!      font_type	The font type ID. Valid values are:
//!					PROMPT_TEXT_FONT
//!					TITLEBAR_FONT,
//!					LIST_TEXT_FONT,
//!					BUTTON_TEXT_FONT
//!
//!		strFileName	The file name of the new font.
//!
//! \return
//!      A pointer to the font created for the font_type requested. May be NULL if the
//! 		font could not be created (insufficient memory?).
//!
//! \note
//!
const HypCFont*
UIScreenFactory::CreateFontType( UIScreenFactory::HyperwareFontType font_type,
										   const HString& strFileName )
{
	const HypCFont* pFont = NULL;

	if ( strFileName.empty() )
	{
		return pFont;
	}

	bool bFontAlreadyExists = false;
	// The font name should be the same as the filename without extension.
	HString strFontName = strFileName.substr( 0, strFileName.find ('.') );
	size_t pos = 0;
	for ( pos = 0; pos < HYPERWARE_MAX_FONTS; ++pos )
	{
		if ( strFontName == m_HyperwareFonts[pos]->GetFontName() )
		{
			bFontAlreadyExists = true;
			break;
		}
	}

	if ( bFontAlreadyExists )
	{
		m_HyperwareFonts[font_type] = m_HyperwareFonts[pos];
		pFont = m_HyperwareFonts[pos];
	} else
	{
		pFont = new HypCGrafixFont ( strFileName.c_str() );
		if ( pFont )
		{
            if ( SetFontType ( font_type, pFont ).Failed() )
            {
                delete pFont;
                pFont = m_HyperwareFonts[font_type];
            }
		}
	}
	return pFont;
}



//-----------------------------------------------------------------------------
//!
//!      Sets the font to use when UI elements request
//!
//! \param
//!      font_type	The font type ID. Valid values are:
//!					PROMPT_TEXT_FONT
//!					TITLEBAR_FONT,
//!					LIST_TEXT_FONT,
//!					BUTTON_TEXT_FONT
//!
//!		pFont		Pointer to new font
//!
//! \return
//!      void
//!
//! \note
//!
HypCStatus UIScreenFactory::SetFontType ( UIScreenFactory::HyperwareFontType font_type,
										 const HypCFont* pFont )
{
	if( font_type < HYPERWARE_MAX_FONTS )
	{
		if ( pFont && pFont->IsValid() && !( *pFont == *m_HyperwareFonts[font_type] ) )
		{
			delete m_HyperwareFonts[font_type];
			m_HyperwareFonts[font_type] = pFont;

            return HypCStatus::Success;
		}
	}

    return Status::FontNotSet;
}


//-----------------------------------------------------------------------------
//!
//!      Returns a selected font based on on type.
//!
//! \param
//!      font_type	The font type ID. Valid values are:
//!					PROMPT_TEXT_FONT
//!					TITLEBAR_FONT,
//!					LIST_TEXT_FONT,
//!					BUTTON_TEXT_FONT
//!
//! \return
//!      A const pointer to the requested font, NULL if font_type is an invalid value or
//! 		if the requested font has not been set
//!
//! \note
//!
const HypCFont*
UIScreenFactory::GetFontType ( UIScreenFactory::HyperwareFontType font_type )
{
	const HypCFont *pfont = 0;

	if( font_type < HYPERWARE_MAX_FONTS )
	{
		pfont = m_HyperwareFonts[font_type];
	}

	return pfont;

}

//-----------------------------------------------------------------------------
//!
//!      Creates a data type object based on the type requested
//!
//! \param
//!      sDataTypeName   Class name of the data type object to be created.
//!
//! \return
//!      pointer to the newly created object of type HypCData
//!
//! \note
//!
HypCUIElement*
UIScreenFactory::doCreateInstance( HScreenType ScreenType, HypCUserInterface *iface,
								   const char *dialogName  )
{

	switch( ScreenType )
	{
	case SCREEN_INFO:
		return new HypCGrafixInfoBox( iface,
									  m_Window,
									  m_HyperwareFonts[PROMPT_TEXT_FONT],
									  m_HyperwareFonts[TITLEBAR_FONT] );

	case SCREEN_INPUT:
		return new HypCGrafixInputBox( iface,
									   m_Window,
									   m_HyperwareFonts[PROMPT_TEXT_FONT],
									   m_HyperwareFonts[PROMPT_TEXT_FONT],
									   m_HyperwareFonts[TITLEBAR_FONT] );
	case SCREEN_LIST:
	{
		HypCGrafixList* pList = new HypCGrafixList( iface, m_Window,
													m_HyperwareFonts[LIST_TEXT_FONT],
													m_HyperwareFonts[TITLEBAR_FONT] );
		if ( pList )
		{
            pList->SetFontType( HypCUIElement::SPECIAL_PURPOSE1_FONT, // Navigation buttons font
								m_HyperwareFonts[BUTTON_TEXT_FONT] );
		}
		return pList;
	}
	case SCREEN_MENU:
	{

#if defined( USE_LIST_MENU )
		HypCGrafixListMenu *pGM = new HypCGrafixListMenu( iface,
								   m_Window,
								   "c:\\mainmenu.mnu",
								   m_HyperwareFonts[BUTTON_TEXT_FONT],
								   m_HyperwareFonts[TITLEBAR_FONT] );
#else

		HypCGrafixMenu *pGM = new HypCGrafixMenu( iface,
								   m_Window,
								   "c:\\mainmenu.mnu",
								   m_HyperwareFonts[BUTTON_TEXT_FONT],
								   m_HyperwareFonts[TITLEBAR_FONT] );
#endif

        pGM->SetButtonStyle( BtTextOnly, BsNoBorder );
		pGM->SetButtonPlacement( MbSide );
		pGM->SetSPOSStyle( );
		return pGM;
	}
	case SCREEN_MESSAGE:
		return new HypCGrafixMsgBox( iface,
									 m_Window,
									 m_HyperwareFonts[PROMPT_TEXT_FONT],
									 m_HyperwareFonts[BUTTON_TEXT_FONT] );

    case SCREEN_DIALOG:
        return new CDlgSoruSor(iface, m_HyperwareFonts[LIST_TEXT_FONT],
                                      m_HyperwareFonts[TITLEBAR_FONT], 
                                      m_Window);
		break;


	case SCREEN_LISTBOX:
        return new HypCGrafixListBox( iface, m_Window,
                                      m_HyperwareFonts[LIST_TEXT_FONT],
                                      m_HyperwareFonts[TITLEBAR_FONT] );
		break;

    case SCREEN_PINENTRY:
        return new HypCPINEntryScreen( iface,
									 m_Window,
									 m_HyperwareFonts[PROMPT_TEXT_FONT],
									 m_HyperwareFonts[BUTTON_TEXT_FONT] );
    }
	return NULL;
}

